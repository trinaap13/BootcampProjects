{"ast":null,"code":"var _jsxFileName = \"/Users/trapgodt/MyRepos/BootcampProjects/React_Router_and_History/react_history/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList(_ref) {\n  _s();\n  let {\n    numJokesToGet = 5\n  } = _ref;\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /* get jokes if there are no jokes */\n\n  useEffect(function () {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...jokeObj\n          } = res.data;\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({\n              ...jokeObj,\n              votes: 0\n            });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n    setIsLoading(true);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(allJokes => allJokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), sortedJokes.map(_ref2 => {\n      let {\n        joke,\n        id,\n        votes\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Joke, {\n        text: joke,\n        id: id,\n        votes: votes,\n        vote: vote\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","_ref","_s","numJokesToGet","jokes","setJokes","isLoading","setIsLoading","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","jokeObj","data","has","id","add","push","votes","console","error","err","generateNewJokes","vote","delta","allJokes","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedJokes","sort","a","b","onClick","_ref2","joke","text","_c","$RefreshReg$"],"sources":["/Users/trapgodt/MyRepos/BootcampProjects/React_Router_and_History/react_history/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nfunction JokeList({ numJokesToGet = 5 }) {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /* get jokes if there are no jokes */\n\n  useEffect(function () {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...jokeObj } = res.data;\n\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj, votes: 0 });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n        setIsLoading(false)\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n    setIsLoading(true);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(allJokes =>\n      allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n      )\n  }\n\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n        Get New Jokes\n        </button>\n\n      {sortedJokes.map(({joke, id, votes}) => (\n        <Joke text={joke} key={id} id={id} votes={votes} vote={vote} />\n      ))}\n    </div>\n  );\n}\n\nexport default JokeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}