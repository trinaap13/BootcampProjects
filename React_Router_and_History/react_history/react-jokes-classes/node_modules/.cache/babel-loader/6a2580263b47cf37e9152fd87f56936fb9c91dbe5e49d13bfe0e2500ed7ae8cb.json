{"ast":null,"code":"var _jsxFileName = \"/Users/trapgodt/MyRepos/BootcampProjects/React_Router_and_History/react_history/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass JokeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: [],\n      isLoading: true\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  /* at mount, get jokes */\n\n  componentDidMount() {\n    this.getJokes();\n  }\n\n  /* retrieve jokes from API */\n\n  async getJokes() {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      let jokes = [];\n      let seenJokes = new Set();\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          ...joke\n        } = res.data;\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({\n            ...joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      this.setState({\n        jokes,\n        isLoading: false\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  generateNewJokes() {\n    this.setState({\n      isLoading: true\n    });\n    this.getJokes();\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? {\n        ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\nJokeList.defaultProps = {\n  numJokesToGet: 5\n};\nexport default JokeList;","map":{"version":3,"names":["React","Component","axios","Joke","jsxDEV","_jsxDEV","JokeList","constructor","props","state","jokes","isLoading","generateNewJokes","bind","vote","componentDidMount","getJokes","seenJokes","Set","length","numJokesToGet","res","get","headers","Accept","joke","data","has","id","add","push","votes","console","log","setState","err","error","delta","st","map","j","render","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","defaultProps"],"sources":["/Users/trapgodt/MyRepos/BootcampProjects/React_Router_and_History/react_history/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 5\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: [],\n      isLoading: true\n    };\n\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  /* at mount, get jokes */\n\n  componentDidMount() {\n    this.getJokes();\n  }\n\n  /* retrieve jokes from API */\n\n  async getJokes() {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      let jokes = [];\n      let seenJokes = new Set();\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let { ...joke } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      this.setState({ jokes, isLoading: false });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  generateNewJokes() {\n    this.setState({ isLoading: true});\n    this.getJokes();\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    }));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    if (this.state.isLoading) {\n      return (\n        <div className=\"loading\">\n          <i className=\"fas fa-4x fa-spinner fa-spin\" />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={this.generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map(j => (\n          <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={this.vote}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default JokeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}